# Demo Guide for Mentor - Frontend-Backend Integration

Write-Output "======================================"
Write-Output "FRONTEND-BACKEND DEMO FOR YOUR MENTOR"
Write-Output "======================================"
Write-Output ""

$appUrl = "https://internship-api.gentleforest-68343e46.centralindia.azurecontainerapps.io"

Write-Output "STEP 1: Show the Live Application"
Write-Output "================================="
Write-Output ""
Write-Output "1. Open browser and go to:"
Write-Output "   $appUrl/student.html"
Write-Output ""
Write-Output "2. Point out to your mentor:"
Write-Output "   - Student list loads automatically"
Write-Output "   - Data comes from Azure SQL Database"
Write-Output "   - No page refresh needed"
Write-Output ""

Write-Output "STEP 2: Show Browser Developer Tools"
Write-Output "====================================="
Write-Output ""
Write-Output "1. Press F12 to open Developer Tools"
Write-Output "2. Go to Network tab"
Write-Output "3. Refresh the page"
Write-Output "4. Show your mentor:"
Write-Output "   - GET request to /api/students"
Write-Output "   - JSON response with student data"
Write-Output "   - HTTP 200 status code"
Write-Output ""

Write-Output "STEP 3: Demonstrate Adding New Student"
Write-Output "======================================"
Write-Output ""
Write-Output "1. Fill in the form:"
Write-Output "   - Roll Number: R999"
Write-Output "   - First Name: Demo"
Write-Output "   - Last Name: Student"
Write-Output "   - Email: demo@example.com"
Write-Output "   - Upload any PDF file"
Write-Output ""
Write-Output "2. Click 'Add Student'"
Write-Output ""
Write-Output "3. Show your mentor in Network tab:"
Write-Output "   - POST request to /api/students"
Write-Output "   - JSON payload with student data"
Write-Output "   - Student appears in list immediately"
Write-Output ""

Write-Output "STEP 4: Explain the Integration"
Write-Output "==============================="
Write-Output ""
Write-Output "Tell your mentor:"
Write-Output ""
Write-Output "FRONTEND (student.html):"
Write-Output "- Uses JavaScript fetch() to call APIs"
Write-Output "- Converts form data to JSON"
Write-Output "- Handles file upload with Base64 encoding"
Write-Output "- Updates UI dynamically"
Write-Output ""
Write-Output "BACKEND (Node.js API):"
Write-Output "- Express.js server with REST endpoints"
Write-Output "- Processes JSON requests"
Write-Output "- Stores data in Azure SQL Database"
Write-Output "- Returns JSON responses"
Write-Output ""
Write-Output "DATABASE:"
Write-Output "- Azure SQL Database"
Write-Output "- Stores student records permanently"
Write-Output "- Supports file storage links"
Write-Output ""

Write-Output "STEP 5: Show API Working Directly"
Write-Output "=================================="
Write-Output ""
Write-Output "Testing API endpoint directly:"

try {
    $response = Invoke-WebRequest -Uri "$appUrl/api/students" -UseBasicParsing -TimeoutSec 10
    Write-Output "SUCCESS - API Status: HTTP $($response.StatusCode)"
    
    $data = $response.Content | ConvertFrom-Json
    $count = if ($data.value) { $data.value.Count } elseif ($data -is [array]) { $data.Count } else { 1 }
    Write-Output "SUCCESS - Students Found: $count records"
    Write-Output ""
    Write-Output "This proves the backend API is working independently!"
} catch {
    Write-Output "ERROR: $($_.Exception.Message)"
}

Write-Output ""
Write-Output "STEP 6: Key Points to Emphasize"
Write-Output "==============================="
Write-Output ""
Write-Output "TECHNICAL ARCHITECTURE:"
Write-Output "- Separation of frontend and backend"
Write-Output "- RESTful API design"
Write-Output "- JSON data exchange"
Write-Output "- Asynchronous JavaScript"
Write-Output "- Cloud database integration"
Write-Output ""
Write-Output "BENEFITS:"
Write-Output "- Scalable architecture"
Write-Output "- Real-time data updates"
Write-Output "- Proper error handling"
Write-Output "- File upload capability"
Write-Output "- Mobile-friendly design"
Write-Output ""

Write-Output "DEMONSTRATION COMPLETE!"
Write-Output "======================"
Write-Output ""
Write-Output "Your mentor will see:"
Write-Output "1. Working frontend interface"
Write-Output "2. Real API calls in browser tools"
Write-Output "3. Database integration"
Write-Output "4. File upload functionality"
Write-Output "5. Professional full-stack architecture"
Write-Output ""
Write-Output "Perfect demonstration of frontend-backend integration!"