trigger:
- main   # Trigger pipeline on push to main branch
pool:
  name: Default   # your self-hosted agent pool
  demands: 
    - agent.name -equals SelfHostedAgent


variables:
- group: secrets   # Linked variable group name

steps:
# ----------------------------
# Step 0: Debug environment variables
# ----------------------------
- script: |
    echo "=== DEBUG: Available Variables ==="
    set | sort
  displayName: 'Debug Environment Variables'

# ----------------------------
# Step 1: Checkout code
# ----------------------------
- checkout: self
  displayName: 'Checkout code'

# ----------------------------
# Step 2: Optional - Build frontend (React/Vue/Angular)
# ----------------------------
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- script: |
    cd frontend
    echo "Building frontend..."
    # Uncomment these lines if using React/Vue/Angular
     npm install
     npm run build
  displayName: 'Build frontend (if applicable)'

# ----------------------------
# Step 3: Deploy frontend to Azure Static Web App
# ----------------------------
# - task: AzureStaticWebApp@0
#   inputs:
#     app_location: 'frontend'                         # Frontend folder
#     api_location: ''                                 # Backend is separate
#     output_location: ''                              # Blank for static HTML
#     azure_static_web_apps_api_token: $(AZURE_STATIC_WEB_APPS_API_TOKEN)
#   displayName: 'Deploy frontend'

# ----------------------------
# Step 4: Update backend container environment variables
# ----------------------------
- task: AzureCLI@2
  inputs:
    azureSubscription: 'MyAzureConnection'          # Replace with actual Azure connection name
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      Write-Host "Updating backend environment variables..."

      $ResourceGroup = "placement-tracker-rg"
      $ContainerAppName = "internship-api"

      $envVars = @{
          AZURE_SQL_USER = "$(AZURE_SQL_USER)"
          AZURE_SQL_PASSWORD = "$(AZURE_SQL_PASSWORD)"
          AZURE_SQL_SERVER = "$(AZURE_SQL_SERVER)"
          AZURE_SQL_DATABASE = "$(AZURE_SQL_DATABASE)"
          OPENAI_API_KEY = "$(OPENAI_API_KEY)"
          AZURE_STORAGE_CONNECTION_STRING = "$(AZURE_STORAGE_CONNECTION_STRING)"
          AZURE_STORAGE_ACCOUNT = "$(AZURE_STORAGE_ACCOUNT)"
          AZURE_STORAGE_KEY = "$(AZURE_STORAGE_KEY)"
          AZURE_LANGUAGE_KEY = "$(AZURE_LANGUAGE_KEY)"
          AZURE_LANGUAGE_ENDPOINT = "$(AZURE_LANGUAGE_ENDPOINT)"
      } | ConvertTo-Json -Compress

      az containerapp update `
          --name $ContainerAppName `
          --resource-group $ResourceGroup `
          --env-vars $envVars
  displayName: 'Update backend env variables'
  

# ----------------------------
# Step 5: Finish
# ----------------------------
- script: |
    Write-Host "Pipeline run completed successfully!"
  displayName: 'Finish'
  